# Use an official Node.js runtime as the base image
FROM node:18

# Set the working directory within the container
WORKDIR /app

# Copy package.json and package-lock.json (if available)
COPY package*.json ./

# Install project dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Expose the port your app listens on (change if your app uses a different port)
EXPOSE 3000

# Define the command to run your app when the container starts
CMD [ "npm", "start" ]





docker-compose.yml

YAML
version: '3'
services:
  app:
    build: .       # Build the app using the Dockerfile in the current directory
    ports:
      - "3000:3000" # Map port 3000 on the host to port 3000 in the container
    depends_on:
      - mongo       # Ensure the app starts after the mongo container

  mongo:
    image: mongo   # Use the official MongoDB image from Docker Hub
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root   # Set MongoDB root user
      MONGO_INITDB_ROOT_PASSWORD: password   # Set MongoDB root password
    ports:
      - "27017:27017" # Map the default MongoDB port to the host
    volumes:
      - mongodb-data:/data/db   # Persist MongoDB data in a named volume
volumes:
  mongodb-data: